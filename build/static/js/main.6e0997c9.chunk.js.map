{"version":3,"sources":["utils.js","reducers/index.js","reducers/reducer.status.js","actiontypes.js","reducers/reducer.units.js","reducers/reducer.city.js","reducers/reducer.forecast.js","store.js","controllers/controller.forecast.js","views/components/searchbar/index.js","views/components/searchresult/index.js","index.js"],"names":["SUPPORT_SESSION_STORAGE","Storage","window","sessionStorage","getMostFrequest","list","counts","reduce","a","c","maxCount","Math","max","Object","values","mostFrequent","keys","filter","k","celsius","unit","convert","kelvin","toFixed","fahrenheit","kph","mps","mph","getCachedValue","name","cachedValue","getItem","JSON","parse","error","setCachedValue","value","setItem","stringify","combineReducers","status","state","type","data","units","temperature","windSpeed","city","forecast","reduxDevtoolsExtension","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","reducer","dispatch","WEEKDAYS","WIND_DIRECTIONS","getWindDirection","degree","directionIndex","round","length","summarizeDayForecast","rest","tempMin","min","map","tempMax","condition","icon","replace","wind","direction","speed","b","getFiveDayForecast","fiveDayForecast","currentDay","dayForecast","i","main","weather","dt","datetime","Date","timezone","day","getUTCDay","push","temp_min","temp_max","deg","load5DayForecast","search","expiry","getTime","removeItem","get","setHours","getHours","ceil","getMinutes","setMinutes","setSeconds","response","connect","t","w","useState","setSearch","onSubmit","event","preventDefault","encodeURIComponent","className","placeholder","onChange","target","trim","disabled","Classnames","active","onClick","WeatherDetail","src","alt","array","dayIndex","setDayIndex","offset","e","useEffect","country","key","style","left","concat","date","hours","getUTCHours","minutes","getUTCMinutes","period","get12HourFormat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e0997c9.chunk.js","sourcesContent":["const SUPPORT_SESSION_STORAGE =\n  typeof Storage !== \"undefined\" && window.sessionStorage;\n\nexport const flatArray = array => array.reduce((a, c) => a.concat(c), []);\n\nexport const get12HourFormat = date => {\n  let hours = date.getUTCHours();\n  let minutes = date.getUTCMinutes();\n  let period = hours >= 12 ? \"pm\" : \"am\";\n  hours = hours > 12 ? hours % 12 : hours === 0 ? 12 : hours;\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\n  return `${hours}:${minutes} ${period}`;\n};\n\nexport const getMostFrequest = list => {\n  let counts = list.reduce((a, c) => {\n    a[c] = (a[c] || 0) + 1;\n    return a;\n  }, {});\n\n  let maxCount = Math.max(...Object.values(counts));\n  let mostFrequent = Object.keys(counts).filter(k => counts[k] === maxCount);\n\n  return mostFrequent && mostFrequent[0];\n};\n\nexport const kelvinToCelsius = kelvin => (kelvin - 273.15).toFixed(2);\n\nexport const kelvinToFahrenheit = kelvin =>\n  ((kelvin * 9) / 5 - 459.67).toFixed(2);\n\nexport const mpsToKPH = mps => ((mps / 1000) * 3600).toFixed(2);\n\nexport const mpsToMPH = mps => (((mps / 1000) * 3600) / 1.609344).toFixed(2);\n\nexport const celsius = { unit: \"°C\", convert: kelvinToCelsius };\n\nexport const fahrenheit = { unit: \"°F\", convert: kelvinToFahrenheit };\n\nexport const kph = { unit: \"kph\", convert: mpsToKPH };\n\nexport const mph = { unit: \"mph\", convert: mpsToMPH };\n\nexport const getCachedValue = name => {\n  if (SUPPORT_SESSION_STORAGE) {\n    const cachedValue = window.sessionStorage.getItem(name);\n\n    if (cachedValue) {\n      try {\n        return JSON.parse(cachedValue);\n      } catch (error) {\n        return null;\n      }\n    }\n  } else {\n    return null;\n  }\n};\n\nexport const setCachedValue = (name, value) => {\n  if (SUPPORT_SESSION_STORAGE) {\n    window.sessionStorage.setItem(name, JSON.stringify(value));\n  }\n};\n\nexport const clearCachedValue = name => {\n  if (SUPPORT_SESSION_STORAGE) {\n    window.sessionStorage.removeItem(name);\n  }\n};\n","import { combineReducers } from \"redux\";\nimport status from \"./reducer.status\";\nimport units from \"./reducer.units\";\nimport city from \"./reducer.city\";\nimport forecast from \"./reducer.forecast\";\n\nexport default combineReducers({\n  status,\n  units,\n  city,\n  forecast\n});\n","import {\n  IDLE,\n  LOADING,\n  SEARCH_FOUND,\n  SEARCH_NOT_FOUND,\n  SEARCH_FAILED\n} from \"../actiontypes\";\n\nexport default (state = IDLE, { type, data }) => {\n  if (\n    type === LOADING ||\n    type === SEARCH_FOUND ||\n    type === SEARCH_NOT_FOUND ||\n    type === SEARCH_FAILED\n  ) {\n    return type;\n  } else {\n    return state;\n  }\n};\n","export const IDLE = \"IDLE\";\nexport const LOADING = \"LOADING\";\nexport const SEARCH_FOUND = \"SEARCH_FOUND\";\nexport const SEARCH_NOT_FOUND = \"SEARCH_NOT_FOUND\";\nexport const SEARCH_FAILED = \"SEARCH_FAILED\";\nexport const TEMPERATURE_UNIT_CHANGE = \"TEMPERATURE_UNIT_CHANGE\";\nexport const WIND_SPEED_UNIT_CHANGE = \"WIND_SPEED_UNIT_CHANGE\";\n","import {\n  TEMPERATURE_UNIT_CHANGE,\n  WIND_SPEED_UNIT_CHANGE\n} from \"../actiontypes\";\n\nimport { celsius, kph } from \"../utils\";\n\nexport default (\n  state = { temperature: celsius, windSpeed: kph },\n  { type, data }\n) => {\n  switch (type) {\n    case TEMPERATURE_UNIT_CHANGE:\n      return { temperature: data, windSpeed: state.windSpeed };\n    case WIND_SPEED_UNIT_CHANGE:\n      return { temperature: state.temperature, windSpeed: data };\n    default:\n      return state;\n  }\n};\n","import { SEARCH_FOUND, SEARCH_NOT_FOUND, SEARCH_FAILED } from \"../actiontypes\";\n\nexport default (state = null, { type, data }) => {\n  switch (type) {\n    case SEARCH_FOUND:\n      return data.city;\n    case SEARCH_NOT_FOUND:\n    case SEARCH_FAILED:\n      return null;\n    default:\n      return state;\n  }\n};\n","import { SEARCH_FOUND, SEARCH_NOT_FOUND, SEARCH_FAILED } from \"../actiontypes\";\n\nexport default (state = [], { type, data }) => {\n  switch (type) {\n    case SEARCH_FOUND:\n      return data.forecast;\n    case SEARCH_NOT_FOUND:\n    case SEARCH_FAILED:\n      return [];\n    default:\n      return state;\n  }\n};\n","import { createStore } from \"redux\";\n\nimport reducer from \"./reducers\";\n\nconst reduxDevtoolsExtension =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nconst store = createStore(reducer, reduxDevtoolsExtension);\n\nexport const dispatch = store.dispatch;\n\nexport default store;\n","import { get } from \"axios\";\n\nimport {\n  LOADING,\n  SEARCH_FOUND,\n  SEARCH_NOT_FOUND,\n  SEARCH_FAILED\n} from \"../actiontypes\";\nimport { dispatch } from \"../store\";\nimport {\n  getCachedValue,\n  setCachedValue,\n  clearCachedValue,\n  getMostFrequest\n} from \"../utils\";\n\nconst API_KEY = \"d614b4ae2c96616c63156e819bd878d4\";\nconst FORECAST_URL = \"https://api.openweathermap.org/data/2.5/forecast\";\nconst WEATHER_ICON_URL = \"https://openweathermap.org/img/wn\";\n\nconst WEEKDAYS = [\"Sun\", \"Mon\", \"Tues\", \"Wed\", \"Thur\", \"Fri\", \"Sat\"];\n\nconst WIND_DIRECTIONS = [\n  \"N\",\n  \"NNE\",\n  \"NE\",\n  \"ENE\",\n  \"E\",\n  \"ESE\",\n  \"SE\",\n  \"SSE\",\n  \"S\",\n  \"SSW\",\n  \"SW\",\n  \"WSW\",\n  \"W\",\n  \"WNW\",\n  \"NW\",\n  \"NNW\"\n];\n\nconst getWindDirection = degree => {\n  const directionIndex = Math.round((degree / 360) * WIND_DIRECTIONS.length);\n  return WIND_DIRECTIONS[directionIndex % WIND_DIRECTIONS.length];\n};\n\nconst summarizeDayForecast = ({ list, ...rest }) => ({\n  tempMin: Math.min(...list.map(({ tempMin }) => tempMin)),\n  tempMax: Math.max(...list.map(({ tempMax }) => tempMax)),\n  condition: getMostFrequest(list.map(({ condition }) => condition)),\n  icon: getMostFrequest(list.map(({ icon }) => icon)).replace(\"n@2x\", \"d@2x\"),\n  wind: {\n    direction: getMostFrequest(list.map(({ wind }) => wind.direction)),\n    speed: (\n      list.map(({ wind }) => wind.speed).reduce((a, b) => a + b) / list.length\n    ).toFixed(2)\n  },\n  list,\n  ...rest\n});\n\nconst getFiveDayForecast = ({ city, list }) => {\n  const fiveDayForecast = [];\n  let currentDay = null;\n  let dayForecast = null;\n\n  for (let i = 0; i < list.length; i++) {\n    let { main, weather, wind, dt } = list[i];\n    let datetime = new Date((dt + city.timezone) * 1000);\n    let day = WEEKDAYS[datetime.getUTCDay()];\n\n    if (currentDay !== day) {\n      if (dayForecast) {\n        fiveDayForecast.push(summarizeDayForecast(dayForecast));\n      }\n\n      currentDay = day;\n      dayForecast = { day, list: [] };\n    }\n\n    dayForecast.list.push({\n      day,\n      datetime,\n      tempMin: main.temp_min,\n      tempMax: main.temp_max,\n      condition: weather[0].main,\n      icon: `${WEATHER_ICON_URL}/${weather[0].icon}@2x.png`,\n      wind: {\n        direction: getWindDirection(wind.deg),\n        speed: wind.speed\n      }\n    });\n  }\n\n  if (dayForecast) {\n    fiveDayForecast.push(summarizeDayForecast(dayForecast));\n  }\n\n  return { city, forecast: fiveDayForecast };\n};\n\nexport const load5DayForecast = async search => {\n  dispatch({ type: LOADING });\n\n  const cachedValue = getCachedValue(search);\n\n  if (cachedValue) {\n    const { expiry, ...rest } = cachedValue;\n\n    if (expiry <= new Date().getTime()) {\n      clearCachedValue(search);\n    } else {\n      dispatch({ type: SEARCH_FOUND, data: getFiveDayForecast(rest) });\n      return;\n    }\n  }\n\n  try {\n    const { data } = await get(`${FORECAST_URL}?q=${search}&APPID=${API_KEY}`);\n\n    var expiry = new Date();\n    expiry.setHours(expiry.getHours() + Math.ceil(expiry.getMinutes() / 60));\n    expiry.setMinutes(0);\n    expiry.setSeconds(0);\n\n    setCachedValue(search, { ...data, expiry: expiry.getTime() });\n    dispatch({ type: SEARCH_FOUND, data: getFiveDayForecast(data) });\n  } catch (error) {\n    if (error.response && error.response.status === 404) {\n      dispatch({ type: SEARCH_NOT_FOUND });\n    } else {\n      dispatch({ type: SEARCH_FAILED, data: error });\n    }\n  }\n};\n","import React, { useState } from \"react\";\nimport Classnames from \"classnames\";\nimport { connect } from \"react-redux\";\n\nimport { load5DayForecast } from \"../../../controllers/controller.forecast\";\nimport { celsius, fahrenheit, kph, mph } from \"../../../utils\";\nimport {\n  TEMPERATURE_UNIT_CHANGE,\n  WIND_SPEED_UNIT_CHANGE\n} from \"../../../actiontypes\";\n\nimport \"./style.css\";\n\nconst SearchBar = ({ temperature: t, windSpeed: w, dispatch }) => {\n  const [search, setSearch] = useState(\"\");\n\n  const onSubmit = async event => {\n    event.preventDefault();\n\n    if (search) {\n      await load5DayForecast(encodeURIComponent(search));\n    }\n\n    return false;\n  };\n\n  return (\n    <div>\n      <form className=\"search-bar\" onSubmit={event => onSubmit(event)}>\n        <input\n          type=\"text\"\n          placeholder=\"Your city name\"\n          onChange={({ target }) => setSearch(target.value.trim())}\n        />\n        <button type=\"submit\" disabled={search.length === 0}>\n          Search\n        </button>\n      </form>\n      <div className=\"temperature-unit\">\n        <span\n          className={Classnames({ active: celsius.unit === t.unit })}\n          onClick={() =>\n            dispatch({ type: TEMPERATURE_UNIT_CHANGE, data: celsius })\n          }\n        >\n          {celsius.unit}\n        </span>{\" \"}\n        |{\" \"}\n        <span\n          className={Classnames({ active: fahrenheit.unit === t.unit })}\n          onClick={() =>\n            dispatch({ type: TEMPERATURE_UNIT_CHANGE, data: fahrenheit })\n          }\n        >\n          {fahrenheit.unit}\n        </span>\n      </div>\n      <div className=\"wind-speed-unit\">\n        <span\n          className={Classnames({ active: kph.unit === w.unit })}\n          onClick={() => dispatch({ type: WIND_SPEED_UNIT_CHANGE, data: kph })}\n        >\n          {kph.unit}\n        </span>{\" \"}\n        |{\" \"}\n        <span\n          className={Classnames({ active: mph.unit === w.unit })}\n          onClick={() => dispatch({ type: WIND_SPEED_UNIT_CHANGE, data: mph })}\n        >\n          {mph.unit}\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(({ units }) => units)(SearchBar);\n","import React, { useState, useEffect } from \"react\";\nimport Classnames from \"classnames\";\nimport { connect } from \"react-redux\";\n\nimport { flatArray, get12HourFormat } from \"../../../utils\";\n\nimport \"./style.css\";\n\nimport {\n  LOADING,\n  SEARCH_FOUND,\n  SEARCH_NOT_FOUND,\n  SEARCH_FAILED\n} from \"../../../actiontypes\";\n\nconst WeatherDetailComponent = ({\n  temperature,\n  windSpeed,\n  icon,\n  condition,\n  tempMax,\n  tempMin,\n  wind\n}) => (\n  <div>\n    <img className=\"forecast-image\" src={icon} alt=\"condition\" />\n    <div className=\"forecast-condition\">{condition}</div>\n    <div className=\"forecast-temperature\">\n      <div className=\"forecast-temperature-title\">Temperature</div>\n      <span className=\"forecast-temp-max\">\n        {temperature.convert(tempMax)}\n        {temperature.unit}\n      </span>{\" \"}\n      <span className=\"forecast-temp-min\">\n        {temperature.convert(tempMin)}\n        {temperature.unit}\n      </span>\n    </div>\n    <div className=\"forecast-wind\">\n      <div className=\"forecast-wind-speed-title\">Wind</div>\n      <span className=\"forecast-wind-speed\">\n        {windSpeed.convert(wind.speed)}\n      </span>{\" \"}\n      <span className=\"forecast-wind-speed-unit\">{windSpeed.unit}</span>{\" \"}\n      <span className=\"forecast-wind-direction\">{wind.direction}</span>\n    </div>\n  </div>\n);\n\nconst WeatherDetail = connect(({ units }) => units)(WeatherDetailComponent);\n\nconst SearchResult = ({ status, units, city, forecast }) => {\n  const [dayIndex, setDayIndex] = useState(0);\n  const currentDay = (forecast[dayIndex] && forecast[dayIndex].day) || null;\n  const offset = forecast\n    .filter((e, i) => i < dayIndex)\n    .map(({ list }) => list.length)\n    .reduce((a, b) => a + b, 0);\n\n  useEffect(() => setDayIndex(0), [forecast]);\n\n  switch (status) {\n    case SEARCH_FOUND:\n      return (\n        <div className=\"forecast\">\n          <div className=\"city\">\n            {city.name}, {city.country}\n          </div>\n          <div className=\"five-day-forecast\">\n            {forecast.map(\n              ({ day, icon, condition, tempMax, tempMin, wind }, i) => (\n                <div\n                  className={Classnames(\"day-forecast\", {\n                    active: dayIndex === i\n                  })}\n                  key={day}\n                  onClick={() => setDayIndex(i)}\n                >\n                  <div className=\"forecast-title\">{day}</div>\n                  <WeatherDetail\n                    icon={icon}\n                    condition={condition}\n                    tempMax={tempMax}\n                    tempMin={tempMin}\n                    wind={wind}\n                  />\n                </div>\n              )\n            )}\n          </div>\n          <div\n            className=\"three-hour-forecast\"\n            style={{ left: `-${offset * 12.5}%` }}\n          >\n            {flatArray(forecast.map(({ list }) => list)).map(\n              ({ tempMin, tempMax, day, datetime, wind, condition, icon }) => (\n                <div\n                  className={Classnames(\"hour-forecast\", {\n                    active: currentDay === day\n                  })}\n                  key={datetime}\n                >\n                  <div className=\"forecast-title\">\n                    {get12HourFormat(datetime)}\n                  </div>\n                  <WeatherDetail\n                    icon={icon}\n                    condition={condition}\n                    tempMax={tempMax}\n                    tempMin={tempMin}\n                    wind={wind}\n                  />\n                </div>\n              )\n            )}\n          </div>\n        </div>\n      );\n    case SEARCH_NOT_FOUND:\n      return <div className=\"search-message\">City not found</div>;\n    case SEARCH_FAILED:\n      return <div className=\"search-message\">Search failed</div>;\n    case LOADING:\n      return <div className=\"search-loading\"></div>;\n    default:\n      return <div className=\"search-message\">Search a city</div>;\n  }\n};\n\nexport default connect(state => state)(SearchResult);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport SearchBar from \"./views/components/searchbar\";\nimport SearchResult from \"./views/components/searchresult\";\n\nimport store from \"./store\";\n\nimport \"./style.css\";\n\nconst App = () => (\n  <Provider store={store}>\n    <SearchBar />\n    <SearchResult />\n  </Provider>\n);\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}