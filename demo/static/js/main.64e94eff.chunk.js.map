{"version":3,"sources":["utils.js","reducers/index.js","reducers/reducer.status.js","actiontypes.js","reducers/reducer.units.js","reducers/reducer.city.js","reducers/reducer.forecast.js","store.js","controllers/controller.forecast.js","views/components/searchbar/index.js","views/components/searchresult/index.js","index.js"],"names":["SUPPORT_SESSION_STORAGE","Storage","window","sessionStorage","getAverage","list","reduce","a","b","length","getMostFrequest","counts","c","maxCount","Math","max","Object","values","mostFrequent","keys","filter","k","celsius","unit","convert","kelvin","fahrenheit","kph","mps","mph","getCachedValue","name","cachedValue","getItem","JSON","parse","error","setCachedValue","value","setItem","stringify","combineReducers","status","state","type","data","units","temperature","windSpeed","city","forecast","reduxDevtoolsExtension","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","reducer","dispatch","WEEKDAYS","WIND_DIRECTIONS","getWindDirection","degree","directionIndex","round","summarizeDayForecast","rest","tempMin","min","map","tempMax","condition","icon","replace","wind","direction","speed","getFiveDayForecast","fiveDayForecast","currentDay","dayForecast","i","main","weather","dt","datetime","Date","timezone","day","getUTCDay","push","temp_min","temp_max","deg","load5DayForecast","search","expiry","getTime","removeItem","get","setHours","getHours","ceil","getMinutes","setMinutes","setSeconds","response","connect","t","w","useState","setSearch","onSubmit","event","preventDefault","encodeURIComponent","className","placeholder","onChange","target","trim","disabled","Classnames","active","onClick","WeatherDetail","src","alt","toFixed","dayIndex","setDayIndex","hourlyForecast","e","concat","overallTempMin","overallTempMax","tempRange","offset","polyPoints","join","useEffect","country","key","style","left","date","hours","getUTCHours","minutes","getUTCMinutes","period","get12HourFormat","viewBox","PADDING","width","height","preserveAspectRatio","points","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.64e94eff.chunk.js","sourcesContent":["const SUPPORT_SESSION_STORAGE =\n  typeof Storage !== \"undefined\" && window.sessionStorage;\n\nexport const flatArray = array => array.reduce((a, c) => a.concat(c), []);\n\nexport const get12HourFormat = date => {\n  let hours = date.getUTCHours();\n  let minutes = date.getUTCMinutes();\n  let period = hours >= 12 ? \"pm\" : \"am\";\n  hours = hours > 12 ? hours % 12 : hours === 0 ? 12 : hours;\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\n  return `${hours}:${minutes} ${period}`;\n};\n\nexport const getAverage = list => list.reduce((a, b) => a + b) / list.length;\n\nexport const getMostFrequest = list => {\n  let counts = list.reduce((a, c) => {\n    a[c] = (a[c] || 0) + 1;\n    return a;\n  }, {});\n\n  let maxCount = Math.max(...Object.values(counts));\n  let mostFrequent = Object.keys(counts).filter(k => counts[k] === maxCount);\n\n  return mostFrequent && mostFrequent[0];\n};\n\nexport const kelvinToCelsius = kelvin => kelvin - 273.15;\n\nexport const kelvinToFahrenheit = kelvin => (kelvin * 9) / 5 - 459.67;\n\nexport const mpsToKPH = mps => (mps / 1000) * 3600;\n\nexport const mpsToMPH = mps => ((mps / 1000) * 3600) / 1.609344;\n\nexport const celsius = { unit: \"°C\", convert: kelvinToCelsius };\n\nexport const fahrenheit = { unit: \"°F\", convert: kelvinToFahrenheit };\n\nexport const kph = { unit: \"kph\", convert: mpsToKPH };\n\nexport const mph = { unit: \"mph\", convert: mpsToMPH };\n\nexport const getCachedValue = name => {\n  if (SUPPORT_SESSION_STORAGE) {\n    const cachedValue = window.sessionStorage.getItem(name);\n\n    if (cachedValue) {\n      try {\n        return JSON.parse(cachedValue);\n      } catch (error) {\n        return null;\n      }\n    }\n  } else {\n    return null;\n  }\n};\n\nexport const setCachedValue = (name, value) => {\n  if (SUPPORT_SESSION_STORAGE) {\n    window.sessionStorage.setItem(name, JSON.stringify(value));\n  }\n};\n\nexport const clearCachedValue = name => {\n  if (SUPPORT_SESSION_STORAGE) {\n    window.sessionStorage.removeItem(name);\n  }\n};\n","import { combineReducers } from \"redux\";\nimport status from \"./reducer.status\";\nimport units from \"./reducer.units\";\nimport city from \"./reducer.city\";\nimport forecast from \"./reducer.forecast\";\n\nexport default combineReducers({\n  status,\n  units,\n  city,\n  forecast\n});\n","import {\n  IDLE,\n  LOADING,\n  SEARCH_FOUND,\n  SEARCH_NOT_FOUND,\n  SEARCH_FAILED\n} from \"../actiontypes\";\n\nexport default (state = IDLE, { type, data }) => {\n  if (\n    type === LOADING ||\n    type === SEARCH_FOUND ||\n    type === SEARCH_NOT_FOUND ||\n    type === SEARCH_FAILED\n  ) {\n    return type;\n  } else {\n    return state;\n  }\n};\n","export const IDLE = \"IDLE\";\nexport const LOADING = \"LOADING\";\nexport const SEARCH_FOUND = \"SEARCH_FOUND\";\nexport const SEARCH_NOT_FOUND = \"SEARCH_NOT_FOUND\";\nexport const SEARCH_FAILED = \"SEARCH_FAILED\";\nexport const TEMPERATURE_UNIT_CHANGE = \"TEMPERATURE_UNIT_CHANGE\";\nexport const WIND_SPEED_UNIT_CHANGE = \"WIND_SPEED_UNIT_CHANGE\";\n","import {\n  TEMPERATURE_UNIT_CHANGE,\n  WIND_SPEED_UNIT_CHANGE\n} from \"../actiontypes\";\n\nimport { celsius, kph } from \"../utils\";\n\nexport default (\n  state = { temperature: celsius, windSpeed: kph },\n  { type, data }\n) => {\n  switch (type) {\n    case TEMPERATURE_UNIT_CHANGE:\n      return { temperature: data, windSpeed: state.windSpeed };\n    case WIND_SPEED_UNIT_CHANGE:\n      return { temperature: state.temperature, windSpeed: data };\n    default:\n      return state;\n  }\n};\n","import { SEARCH_FOUND, SEARCH_NOT_FOUND, SEARCH_FAILED } from \"../actiontypes\";\n\nexport default (state = null, { type, data }) => {\n  switch (type) {\n    case SEARCH_FOUND:\n      return data.city;\n    case SEARCH_NOT_FOUND:\n    case SEARCH_FAILED:\n      return null;\n    default:\n      return state;\n  }\n};\n","import { SEARCH_FOUND, SEARCH_NOT_FOUND, SEARCH_FAILED } from \"../actiontypes\";\n\nexport default (state = [], { type, data }) => {\n  switch (type) {\n    case SEARCH_FOUND:\n      return data.forecast;\n    case SEARCH_NOT_FOUND:\n    case SEARCH_FAILED:\n      return [];\n    default:\n      return state;\n  }\n};\n","import { createStore } from \"redux\";\n\nimport reducer from \"./reducers\";\n\nconst reduxDevtoolsExtension =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nconst store = createStore(reducer, reduxDevtoolsExtension);\n\nexport const dispatch = store.dispatch;\n\nexport default store;\n","import { get } from \"axios\";\n\nimport {\n  LOADING,\n  SEARCH_FOUND,\n  SEARCH_NOT_FOUND,\n  SEARCH_FAILED\n} from \"../actiontypes\";\nimport { dispatch } from \"../store\";\nimport {\n  getAverage,\n  getCachedValue,\n  setCachedValue,\n  clearCachedValue,\n  getMostFrequest\n} from \"../utils\";\n\nconst API_KEY = \"d614b4ae2c96616c63156e819bd878d4\";\nconst FORECAST_URL = \"https://api.openweathermap.org/data/2.5/forecast\";\nconst WEATHER_ICON_URL = \"https://openweathermap.org/img/wn\";\n\nconst WEEKDAYS = [\"Sun\", \"Mon\", \"Tues\", \"Wed\", \"Thur\", \"Fri\", \"Sat\"];\n\nconst WIND_DIRECTIONS = [\n  \"N\",\n  \"NNE\",\n  \"NE\",\n  \"ENE\",\n  \"E\",\n  \"ESE\",\n  \"SE\",\n  \"SSE\",\n  \"S\",\n  \"SSW\",\n  \"SW\",\n  \"WSW\",\n  \"W\",\n  \"WNW\",\n  \"NW\",\n  \"NNW\"\n];\n\nconst getWindDirection = degree => {\n  const directionIndex = Math.round((degree / 360) * WIND_DIRECTIONS.length);\n  return WIND_DIRECTIONS[directionIndex % WIND_DIRECTIONS.length];\n};\n\nconst summarizeDayForecast = ({ list, ...rest }) => ({\n  tempMin: Math.min(...list.map(({ tempMin }) => tempMin)),\n  tempMax: Math.max(...list.map(({ tempMax }) => tempMax)),\n  condition: getMostFrequest(list.map(({ condition }) => condition)),\n  icon: getMostFrequest(list.map(({ icon }) => icon)).replace(\"n@2x\", \"d@2x\"),\n  wind: {\n    direction: getWindDirection(\n      getAverage(list.map(({ wind }) => wind.degree))\n    ),\n    speed: getAverage(list.map(({ wind }) => wind.speed))\n  },\n  list,\n  ...rest\n});\n\nconst getFiveDayForecast = ({ city, list }) => {\n  const fiveDayForecast = [];\n  let currentDay = null;\n  let dayForecast = null;\n\n  for (let i = 0; i < list.length; i++) {\n    let { main, weather, wind, dt } = list[i];\n    let datetime = new Date((dt + city.timezone) * 1000);\n    let day = WEEKDAYS[datetime.getUTCDay()];\n\n    if (currentDay !== day) {\n      if (dayForecast) {\n        fiveDayForecast.push(summarizeDayForecast(dayForecast));\n      }\n\n      currentDay = day;\n      dayForecast = { day, list: [] };\n    }\n\n    dayForecast.list.push({\n      day,\n      datetime,\n      tempMin: main.temp_min,\n      tempMax: main.temp_max,\n      condition: weather[0].main,\n      icon: `${WEATHER_ICON_URL}/${weather[0].icon}@2x.png`,\n      wind: {\n        degree: wind.deg,\n        direction: getWindDirection(wind.deg),\n        speed: wind.speed\n      }\n    });\n  }\n\n  if (dayForecast) {\n    fiveDayForecast.push(summarizeDayForecast(dayForecast));\n  }\n\n  return { city, forecast: fiveDayForecast };\n};\n\nexport const load5DayForecast = async search => {\n  dispatch({ type: LOADING });\n\n  const cachedValue = getCachedValue(search);\n\n  if (cachedValue) {\n    const { expiry, ...rest } = cachedValue;\n\n    if (expiry <= new Date().getTime()) {\n      clearCachedValue(search);\n    } else {\n      dispatch({ type: SEARCH_FOUND, data: getFiveDayForecast(rest) });\n      return;\n    }\n  }\n\n  try {\n    const { data } = await get(`${FORECAST_URL}?q=${search}&APPID=${API_KEY}`);\n\n    var expiry = new Date();\n    expiry.setHours(expiry.getHours() + Math.ceil(expiry.getMinutes() / 60));\n    expiry.setMinutes(0);\n    expiry.setSeconds(0);\n\n    setCachedValue(search, { ...data, expiry: expiry.getTime() });\n    dispatch({ type: SEARCH_FOUND, data: getFiveDayForecast(data) });\n  } catch (error) {\n    if (error.response && error.response.status === 404) {\n      dispatch({ type: SEARCH_NOT_FOUND });\n    } else {\n      dispatch({ type: SEARCH_FAILED, data: error });\n    }\n  }\n};\n","import React, { useState } from \"react\";\nimport Classnames from \"classnames\";\nimport { connect } from \"react-redux\";\n\nimport { load5DayForecast } from \"../../../controllers/controller.forecast\";\nimport { celsius, fahrenheit, kph, mph } from \"../../../utils\";\nimport {\n  TEMPERATURE_UNIT_CHANGE,\n  WIND_SPEED_UNIT_CHANGE\n} from \"../../../actiontypes\";\n\nimport \"./style.css\";\n\nconst SearchBar = ({ temperature: t, windSpeed: w, dispatch }) => {\n  const [search, setSearch] = useState(\"\");\n\n  const onSubmit = async event => {\n    event.preventDefault();\n\n    if (search) {\n      await load5DayForecast(encodeURIComponent(search));\n    }\n\n    return false;\n  };\n\n  return (\n    <div>\n      <form className=\"search-bar\" onSubmit={event => onSubmit(event)}>\n        <input\n          type=\"text\"\n          placeholder=\"Your city name\"\n          onChange={({ target }) => setSearch(target.value.trim())}\n        />\n        <button type=\"submit\" disabled={search.length === 0}>\n          Search\n        </button>\n      </form>\n      <div className=\"temperature-unit\">\n        <span\n          className={Classnames({ active: celsius.unit === t.unit })}\n          onClick={() =>\n            dispatch({ type: TEMPERATURE_UNIT_CHANGE, data: celsius })\n          }\n        >\n          {celsius.unit}\n        </span>{\" \"}\n        |{\" \"}\n        <span\n          className={Classnames({ active: fahrenheit.unit === t.unit })}\n          onClick={() =>\n            dispatch({ type: TEMPERATURE_UNIT_CHANGE, data: fahrenheit })\n          }\n        >\n          {fahrenheit.unit}\n        </span>\n      </div>\n      <div className=\"wind-speed-unit\">\n        <span\n          className={Classnames({ active: kph.unit === w.unit })}\n          onClick={() => dispatch({ type: WIND_SPEED_UNIT_CHANGE, data: kph })}\n        >\n          {kph.unit}\n        </span>{\" \"}\n        |{\" \"}\n        <span\n          className={Classnames({ active: mph.unit === w.unit })}\n          onClick={() => dispatch({ type: WIND_SPEED_UNIT_CHANGE, data: mph })}\n        >\n          {mph.unit}\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(({ units }) => units)(SearchBar);\n","import React, { useState, useEffect } from \"react\";\nimport Classnames from \"classnames\";\nimport { connect } from \"react-redux\";\n\nimport { flatArray, get12HourFormat } from \"../../../utils\";\n\nimport \"./style.css\";\n\nimport {\n  LOADING,\n  SEARCH_FOUND,\n  SEARCH_NOT_FOUND,\n  SEARCH_FAILED\n} from \"../../../actiontypes\";\n\nconst SCALE = 20;\nconst PADDING = 40;\n\nconst WeatherDetailComponent = ({\n  temperature,\n  windSpeed,\n  icon,\n  condition,\n  tempMax,\n  tempMin,\n  wind\n}) => (\n  <div>\n    <img className=\"forecast-image\" src={icon} alt=\"condition\" />\n    <div className=\"forecast-condition\">{condition}</div>\n    <div className=\"forecast-temperature\">\n      <div className=\"forecast-temperature-title\">Temperature</div>\n      <span className=\"forecast-temp-max\">\n        {temperature.convert(tempMax).toFixed(1)}\n        {temperature.unit}\n      </span>{\" \"}\n      <span className=\"forecast-temp-min\">\n        {temperature.convert(tempMin).toFixed(1)}\n        {temperature.unit}\n      </span>\n    </div>\n    <div className=\"forecast-wind\">\n      <div className=\"forecast-wind-speed-title\">Wind</div>\n      <span className=\"forecast-wind-speed\">\n        {windSpeed.convert(wind.speed).toFixed(1)}\n      </span>{\" \"}\n      <span className=\"forecast-wind-speed-unit\">{windSpeed.unit}</span>{\" \"}\n      <span className=\"forecast-wind-direction\">{wind.direction}</span>\n    </div>\n  </div>\n);\n\nconst WeatherDetail = connect(({ units }) => units)(WeatherDetailComponent);\n\nconst SearchResult = ({ status, units, city, forecast }) => {\n  const [dayIndex, setDayIndex] = useState(0);\n  const currentDay = (forecast[dayIndex] && forecast[dayIndex].day) || null;\n  const hourlyForecast = flatArray(\n    forecast.filter((e, i) => i < 5).map(({ list }) => list)\n  );\n  const overallTempMin =\n    Math.min(...hourlyForecast.map(({ tempMin }) => tempMin)) * SCALE;\n  const overallTempMax =\n    Math.max(...hourlyForecast.map(({ tempMax }) => tempMax)) * SCALE;\n  const tempRange = overallTempMax - overallTempMin;\n  const offset = forecast\n    .filter((e, i) => i < dayIndex)\n    .map(({ list }) => list.length)\n    .reduce((a, b) => a + b, 0);\n  const polyPoints = hourlyForecast\n    .map(\n      ({ tempMax }, i) =>\n        `${50 + 100 * i},${overallTempMin + overallTempMax - tempMax * SCALE}`\n    )\n    .join(\" \");\n\n  useEffect(() => setDayIndex(0), [forecast]);\n\n  switch (status) {\n    case SEARCH_FOUND:\n      return (\n        <div className=\"forecast\">\n          <div className=\"city\">\n            {city.name}, {city.country}\n          </div>\n          <div className=\"five-day-forecast\">\n            {forecast.map(\n              ({ day, icon, condition, tempMax, tempMin, wind }, i) => (\n                <div\n                  className={Classnames(\"day-forecast\", {\n                    active: dayIndex === i\n                  })}\n                  key={day}\n                  onClick={() => setDayIndex(i)}\n                >\n                  <div className=\"forecast-title\">{day}</div>\n                  <WeatherDetail\n                    icon={icon}\n                    condition={condition}\n                    tempMax={tempMax}\n                    tempMin={tempMin}\n                    wind={wind}\n                  />\n                </div>\n              )\n            )}\n          </div>\n          <div\n            className=\"three-hour-forecast\"\n            style={{ left: `-${offset * 12.5}%` }}\n          >\n            {hourlyForecast.map(\n              ({ tempMin, tempMax, day, datetime, wind, condition, icon }) => (\n                <div\n                  className={Classnames(\"hour-forecast\", {\n                    active: currentDay === day\n                  })}\n                  key={datetime}\n                >\n                  <div className=\"forecast-title\">\n                    {get12HourFormat(datetime)}\n                  </div>\n                  <WeatherDetail\n                    icon={icon}\n                    condition={condition}\n                    tempMax={tempMax}\n                    tempMin={tempMin}\n                    wind={wind}\n                  />\n                </div>\n              )\n            )}\n            <svg\n              className=\"three-hour-forecast-graph\"\n              viewBox={`0 ${overallTempMin - PADDING}\n                ${hourlyForecast.length * 100} ${tempRange + PADDING * 2}`}\n              width={`${(hourlyForecast.length * 100) / 8}%`}\n              height=\"100%\"\n              preserveAspectRatio=\"none\"\n            >\n              <polyline points={polyPoints} />\n              <polygon\n                points={`50,${overallTempMax + PADDING}\n                  ${polyPoints} ${50 + 100 * (hourlyForecast.length - 1)},\n                  ${overallTempMax + PADDING}`}\n              />\n            </svg>\n          </div>\n        </div>\n      );\n    case SEARCH_NOT_FOUND:\n      return <div className=\"search-message\">City not found</div>;\n    case SEARCH_FAILED:\n      return <div className=\"search-message\">Search failed</div>;\n    case LOADING:\n      return <div className=\"search-loading\"></div>;\n    default:\n      return <div className=\"search-message\">Search a city</div>;\n  }\n};\n\nexport default connect(state => state)(SearchResult);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport SearchBar from \"./views/components/searchbar\";\nimport SearchResult from \"./views/components/searchresult\";\n\nimport store from \"./store\";\n\nimport \"./style.css\";\n\nconst App = () => (\n  <Provider store={store}>\n    <SearchBar />\n    <SearchResult />\n  </Provider>\n);\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}